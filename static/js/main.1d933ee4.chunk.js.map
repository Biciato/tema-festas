{"version":3,"sources":["resources/products.js","ProductSelect.js","SizeSelect.js","resources/colors.js","ColorList.js","ColorSelect.js","resources/themes.js","ThemeSelect.js","NumberSelect.js","AddButton.js","OrderList.js","QuantitySelect.js","models/Product.js","App.js","serviceWorker.js","index.js"],"names":["Products","ProductSelect","props","handleChange","bind","product","this","onProductChange","prodList","map","item","push","value","label","Row","bsPrefix","Col","className","options","onChange","React","Component","Sizes","SizeSelect","size","onSizeChange","sizeList","Colors","default","poa","liso","ColorList","color","onColorClicked","colorList","concat","ColorSelect","handleColorClicked","selectColorType","state","type","onColorChange","setState","Button","onClick","Themes","ThemeSelect","theme","onThemeChange","themeList","NumberSelect","number","onNumberChange","numberList","Array","keys","AddButton","onAddBtnClick","OrderList","productList","qty","QuantitySelect","event","onQtyChange","target","Product","App","handleProductChange","handleSizeChange","handleNumberChange","handleThemeChange","handleColorChange","handleAddBtnClick","handleQtyChange","index","key","Container","id","fluid","length","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1d933ee4.chunk.js","sourcesContent":["const Products = [\n    \"Sacola\",\n    \"Cachepot\",\n    \"Saia\",\n    \"Forminha luxo\",\n    \"Forminha\",\n    \"Vela X-Fire\",\n    \"Bem\",\n    \"Envelope para Convite\",\n    \"Baleiro\",\n    \"Cesta \",\n    \"Cesta \",\n    \"Canudo\",\n    \"Gliter\",\n    \"Inflador de bolas\",\n    \"vela 0785\",\n    \"vela 0784\",\n    \"vela 0783\",\n    \"vela 5466\",\n    \"Petala\",\n    \"Canudo metalizado\",\n    \"etiquetas\",\n    \"brinquedos\",\n    \"Pulseira neon\",\n    \"descartáveis\",\n    \"Pulseira holografica\",\n    \"placas divertidas\",\n    \"adesivos\",\n    \"faixa\",\n    \"paineis\",\n    \"fechamento de envelope\",\n    \"lança confete\"\n];\n\nexport default Products;","import React from 'react';\nimport Products from './resources/products';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Select from 'react-select';\n\nclass ProductSelect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(product) {\n        this.props.onProductChange(product);\n    }\n    render() {\n        let prodList = []; \n        Products.map((item) => prodList.push({value: item, label: item}));\n        return (\n            <Row bsPrefix=\"row m-1\">\n                <Col>\n                    <label className=\"label bg-success\">Produto</label>\n                    <Select options={prodList} onChange={this.handleChange}/>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default ProductSelect;\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Select from 'react-select';\n\nconst Sizes = [\n    'surpresa',\n    'micro',\n    'mini',\n    'pequeno',\n    'médio',\n    'grande',\n]\n\nclass SizeSelect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(size) {\n        this.props.onSizeChange(size);\n    }\n    render() {\n        if (!this.props.product.value){return null;}\n        let sizeList = []; \n        Sizes.map((item) => sizeList.push({value: item, label: item}));\n        return (\n            <Row bsPrefix=\"row m-1\">\n                <Col>\n                    <label className=\"label bg-danger\">Tamanho</label>\n                    <Select options={sizeList} onChange={this.handleChange}/>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default SizeSelect;","const Colors = {\n    default : [\n        \"laranja\",\n        \"verde\",\n        \"verde limão\",\n        \"amarelo\",\n        \"azul\",\n        \"azul bebe\",\n        \"pink\",\n        \"rosa\",\n        \"vermelho\",\n        \"violeta\",\n        \"preto\",\n        \"marinho\",\n    ],\n    poa: [\n        \"marrom c rosa\",\n        \"rosa c marrom\",\n        \"azul c marrom\",\n        \"vermelho c preto\",\n        \"pink c preto\",\n        \"onça pink\",\n        \"onça (ocre c preto)\",\n        \"tifani\",\n        \"pipoca\",\n        \"listrado\"\n    ],\n    liso: [\n        \"branco\",\n        \"kraft\",\n        \"amarelo ouro\",\n        \"champagne\",\n        \"rosa claro\",\n        \"neon amarela\",\n        \"neon verde\",\n        \"neon pink\",\n        \"neon laranja\"\n    ]\n};\n\nexport default Colors;","import React from 'react';\nimport Colors from './resources/colors';\nimport Select from 'react-select';\n\nclass ColorList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(color) {\n        this.props.onColorClicked(color);\n    }\n    render () {\n        let colorList = []; \n        Colors.default.concat(Colors[this.props.color]).map((item) =>\n            colorList.push({value: item, label: item})\n        );\n        return (<Select options={colorList} className=\"m-1\" onChange={this.handleChange}/>);\n    }\n}\n\nexport default ColorList;","import React from 'react';\nimport './ColorSelect.css';\nimport ColorList from './ColorList';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass ColorSelect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleColorClicked = this.handleColorClicked.bind(this);\n        this.selectColorType = this.selectColorType.bind(this);\n        this.state = { type: 'poa' };\n    }\n\n    handleChange(color) {\n        this.props.onColorChange(color);\n    }\n    handleColorClicked(color) {\n        this.handleChange(color);\n    }\n    selectColorType(type) {\n        this.setState({type});\n    }\n\n    render() {\n        if (!this.props.product.value){return null;}\n        const type = this.state.type;\n        return (\n            <Row bsPrefix=\"row m-1\">\n                <Col bsPrefix=\"col-sm\">\n                    <label className=\"label\">Tipo da cor</label>\n                    <Button \n                        bsPrefix={'btn btn-outline-info btn-md m-1'}\n                        onClick={()=> this.selectColorType('poa')}\n                        className={this.state.type === 'poa' ? 'active' : ''}>\n                            POA\n                    </Button>\n                    <Button \n                        bsPrefix={'btn btn-outline-info btn-md m-1'}\n                        onClick={()=> this.selectColorType('liso')}\n                        className={this.state.type === 'liso' ? 'active' : ''}>\n                            LISO\n                    </Button>\n                    <label className=\"label\">Cores</label>\n                    <ColorList color={type} onColorClicked={this.handleColorClicked}/>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default ColorSelect;","const Themes = [\n    \"coroa\",\n    \"game\",\n    \"laço\",\n    \"estrela\",\n    \"aranha\",\n    \"homem verde\",\n    \"coroa azul\",\n    \"coroa rosa\",\n    \"ratinho\",\n    \"mulher poderosa\",\n    \"mon bola\",\n    \"mon laranja\",\n    \"mon azul\",\n    \"mon amarelo\",\n    \"Festa junina\",\n    \"tifani\",\n    \"unicornio\",\n    \"prata\",\n    \"fazendinha\",\n    \"vaquinha\",\n    \"laço pink\",\n    \"circo\",\n    \"chuva\",\n    \"melancia\",\n    \"ouro\"\n];\n\nexport default Themes;","import React from 'react';\nimport Themes from './resources/themes';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Select from 'react-select';\n\nclass ThemeSelect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(theme) {\n        this.props.onThemeChange(theme);\n    }\n    render() {\n        if (!this.props.product.value){return null;}\n        let themeList = []; \n        Themes.map((item) => themeList.push({value: item, label: item}));\n        return (\n            <Row bsPrefix=\"row m-1\">\n                <Col>\n                    <label className=\"label bg-primary\">Tema</label>\n                    <Select options={themeList} onChange={this.handleChange}/>\n                </Col>\n            </Row>\n        );\n    }   \n}\nexport default ThemeSelect;","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Select from 'react-select';\n\nclass NumberSelect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(number) {\n        this.props.onNumberChange(number);\n    }\n    render() {\n        if (!this.props.product.value){return null;}\n        let numberList = []; \n        [...Array(10).keys()].map((item) => numberList.push({value: item, label: item}));\n        return (\n            <Row bsPrefix=\"row m-1\">\n                <Col>\n                    <label className=\"label bg-secondary\">Número</label>\n                    <Select options={numberList} onChange={this.handleChange}/>\n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport default NumberSelect;","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nclass AddButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange() {\n        this.props.onAddBtnClick('clicked');\n    }\n    render() {\n        if (!this.props.product.value){return null;}\n        return(\n            < Row bsPrefix=\"row m-1\">\n                <Col bsPrefix=\"col text-center\">\n                    <Button onClick={this.handleChange}>Incluir</Button>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default AddButton;","import React from 'react';\nimport './OrderList.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction OrderList(props) {\n    const product = props.productList;\n    return(\n        <Row bsPrefix=\"m-1\">\n            <Col bsPrefix=\"p-2 bg-info text-light rounded-left\">\n                <label>Produto:<span>{product.product}</span></label>\n                <label>Tamanho:<span>{product.size}</span></label>\n                <label>Cor:<span>{product.color}</span></label>\n                <label>Tema:<span>{product.theme}</span></label>\n                <label>Número:<span>{product.number}</span></label>\n                <label>Quantidade:<span>{product.qty}</span></label>\n                <label>Total:<span>25,00</span></label>\n            </Col>\n        </Row>\n    );\n}\n\nexport default OrderList;","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass QuantitySelect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(event) {\n        this.props.onQtyChange(event.target.value);\n    }\n    render() {\n        if (!this.props.product.value){return null;}\n        return(\n            <Row bsPrefix=\"row m-1\">\n                <Col bsPrefix=\"col text-center\">\n                    <label className=\"label bg-secondary\">Quantidade</label>\n                    <input type=\"number\" onChange={this.handleChange}></input>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default QuantitySelect;","class Product {\n    constructor(product, size, qty, color, theme, number) {    \n        this.product = product;\n        this.size = size;\n        this.qty = qty;\n        this.color = color;\n        this.theme = theme;\n        this.number = number;\n    }\n\n    get values() {\n        return [\n            this.size,\n            this.qty,\n            this.color,\n            this.theme,\n            this.number,\n        ];\n    }\n}\n\nexport default Product;","import React from 'react';\nimport './App.css';\nimport ProductSelect from './ProductSelect';\nimport SizeSelect from './SizeSelect';\nimport ColorSelect from './ColorSelect';\nimport ThemeSelect from './ThemeSelect';\nimport NumberSelect from './NumberSelect';\nimport AddButton from './AddButton';\nimport OrderList from './OrderList';\nimport Container from 'react-bootstrap/Container';\nimport QuantitySelect from './QuantitySelect';\nimport Product from './models/Product';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleProductChange = this.handleProductChange.bind(this);\n        this.handleSizeChange = this.handleSizeChange.bind(this);\n        this.handleNumberChange = this.handleNumberChange.bind(this);\n        this.handleThemeChange = this.handleThemeChange.bind(this);\n        this.handleColorChange = this.handleColorChange.bind(this);\n        this.handleAddBtnClick = this.handleAddBtnClick.bind(this);\n        this.handleQtyChange = this.handleQtyChange.bind(this);\n        this.state = {\n            product: {value:null},\n            size: {value:null},\n            number: {value:null},\n            theme: {value:null},\n            color: {value:null},\n            qty: null,\n            productList: []\n        };\n    }\n\n    handleProductChange(product) {\n        this.setState({product});\n    }\n    handleSizeChange(size) {\n        this.setState({size});\n    }\n    handleNumberChange(number) {\n        this.setState({number});\n    }\n    handleThemeChange(theme) {\n        this.setState({theme});\n    }\n    handleColorChange(color) {\n        this.setState({color});\n    }\n    handleQtyChange(qty) {\n        this.setState({qty});\n    }\n\n    handleAddBtnClick() {\n        let productList = this.state.productList;\n        const product = new Product(\n            this.state.product.value,\n            this.state.size.value,\n            this.state.qty,\n            this.state.color.value,\n            this.state.theme.value,\n            this.state.number.value\n        )\n        productList.push(product);\n        this.setState({ productList: productList});\n    }\n    render() {\n        const product = this.state.product;\n        const prodList = this.state.productList.map((item, index) => \n            <OrderList key={index} productList={item}/>\n        );\n        return (\n            <Container id=\"App\" fluid=\"true\">\n                <ProductSelect onProductChange={this.handleProductChange}/>\n                <SizeSelect product={product} onSizeChange={this.handleSizeChange}/>\n                <ColorSelect product={product} onColorChange={this.handleColorChange}/>\n                <ThemeSelect product={product} onThemeChange={this.handleThemeChange}/>\n                <NumberSelect product={product} onNumberChange={this.handleNumberChange}/>\n                <QuantitySelect product={product} onQtyChange={this.handleQtyChange}/>\n                <AddButton product={product} onAddBtnClick={this.handleAddBtnClick}/>\n                {prodList}\n                <Row bsPrefix=\"row m-1\">\n                    <Col>\n                        <h5>Total Pedido: <span>{prodList.length < 1 ? '0,00' : '100,00'}</span></h5>\n                    </Col>\n                </Row>                \n            </Container>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './custom.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}